name: SonarQube Cloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          architecture: x64
    
      - name: Build and test with Maven
        run: mvn clean test
        working-directory: ./back
        env:
          CI: true
    
      - name: Upload Jacoco report
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-coverage
          path: ./back/target/site/jacoco/

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./front
        run: npm install

      - name: Run tests with coverage
        working-directory: ./front
        run: npm run test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadless

      - name: Upload coverage result with artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-coverage
          path: ./front/coverage/

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v4.0.0
        with:
          args: >
            -Dsonar.projectKey=romain-25_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=romain-25
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.libraries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
