name: SonarQube Analysis

on:
  push:
    branches:
      - main

jobs:
  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v4
        #with:
        #  fetch-depth: 0

      # Étape 2 : Frontend - Installation et tests
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies for frontend
        working-directory: front
        run: npm install

      - name: Run tests for frontend
        working-directory: front
        run:  npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Debug frontend coverage directory
        working-directory: front/coverage/bobapp
        run: ls -l

      - name: Verify frontend coverage report
        working-directory: front/coverage/bobapp
        run: ls -l lcov.info
      # Étape 3 : Backend - Compilation et tests
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=romain-25_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.organization=romain-25
        #   -Dsonar.sources=back/src
        #   -Dsonar.java.binaries=back/target/classes
        #   -Dsonar.java.test.binaries=back/target/test-classes
        #   -Dsonar.jacoco.reportPaths=back/target/site/jacoco/jacoco.xml
