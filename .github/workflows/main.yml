name: Analysis, Tests and Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analysis:
    name: Analysis, Tests and Docker Image
    runs-on: ubuntu-latest
    steps:
      # Récupérer le code source
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch complet pour l'analyse SonarCloud

      # Backend Analysis (Java)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test Backend
        run: |
          cd back
          mvn clean verify
      - name: Backend SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN_BACK: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          cd back
          mvn sonar:sonar \
            -Dsonar.projectKey=romain-25_bobapp-back \
            -Dsonar.organization=romain-25 \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN_BACK \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.coveragePlugin=jacoco \
            -Dsonar.java.binaries=target/classes

      - name: Upload Jacoco report
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-coverage
          path: ./back/target/site/jacoco/

      # Frontend Analysis (Angular)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies for Frontend
        run: |
          cd front
          yarn install
      - name: Run Frontend Tests with Coverage
        run: |
          cd front
          npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: Debug Frontend Coverage
        run: |
          ls -l front/coverage/bobapp
      - name: Upload coverage result with artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-coverage
          path: ./front/coverage/

      - name: Frontend SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN_FRONT : ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: https://sonarcloud.io
        run: |
          cd front
          docker run --rm \
          -e SONAR_HOST_URL=https://sonarcloud.io \
          -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN_FRONT }} \
          -v $(pwd):/usr/src \
          sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=romain-25_bobapp-front \
            -Dsonar.organization=romain-25 \
            -Dsonar.sources=src \
            -Dsonar.exclusions=**/*.spec.ts,**/*.test.ts \
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
            
      # Upload SonarCloud Report Link
      - name: Generate SonarCloud Report Link
        run: |
          echo "https://sonarcloud.io/dashboard?id=romain-25_bobapp-back" > sonarcloud-back-report.txt
          echo "https://sonarcloud.io/dashboard?id=romain-25_bobapp-front" > sonarcloud-front-report.txt
      - name: Upload SonarCloud Report Link
        uses: actions/upload-artifact@v4
        with:
          name: sonarcloud-report
          path: sonarcloud-report-link.txt

      # Docker Build and Push
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./back
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./front
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
