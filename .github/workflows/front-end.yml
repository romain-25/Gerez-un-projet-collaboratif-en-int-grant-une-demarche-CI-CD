name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: 16
          
      - name: Install dependencies
        working-directory: front
        run: npm i

      - name: Run tests
        working-directory: front
        run: npm run test -- --watch=false --code-coverage

      - name: Check lcov.info existence
        run: ls -la front/coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: front/coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=romain-25_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.organization=romain-25
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=coverage\bobapp\lcov.info
            -Dsonar.exclusions=src/proxy.config.json,src/styles.scss,src/environments/environment.prod.ts,src/environments/environment.ts,**/*.spec.ts
            -Dsonar.coverage.exclusions=src/main.ts,src/polyfills.ts,src/test.ts,src/index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      # Se connecter à Docker Hub avec un jeton d'accès
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./front
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
